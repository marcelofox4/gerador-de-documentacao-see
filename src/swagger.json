{
    "openapi": "3.0.0",
    "info": {
        "title": "SEE Automatic Documentation Generator",
        "description": "Project to develop an API to register Athlete Sponsorship Projects and automatically generate documentation from the Special Secretariat for Sports of the municipality of Ipojuca",
        "version": "1.0.0",
        "contact": {
            "email": "marceloraposo.dev@gmail.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3333",
            "description": "Test API"
        }
    ],
    "paths":{
        "/address/": {
            "get": {
                "tags": ["Address"],
                "summary": "List Addresses",
                "description": "It should be possible to list all registered addresses.",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/address/{id}": {
            "get": {
                "tags": ["Address"],
                "summary": "Find Address by ID",
                "description": "It should be able to find an address by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Address do not exists!"
                    }
                }
            }
        },
        "/athleteResponsible/": {
            "post": {
                "tags": ["Athlete Responsible"],
                "summary": "Create Athlete Responsible",
                "description": "It should be possible to register an Athlete Responsible.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "Marcelo Sodré Raposo",
                                "cpf": "11122233344", 
                                "rg": "1222333-SDS",
                                "gender": "Masculino",
                                "email": "marcelo@email.com", 
                                "phoneNumber": "81977774444", 
                                "profession": "Servidor público", 
                                "maritalStatus": "Casado",
                                "street": "Rua Ipojuca", 
                                "number": 50, 
                                "city": "Ipojuca", 
                                "state": "PE", 
                                "cep": "55590000"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Athlete Responsible created!"
                    },
                    "400": {
                        "description": "Athlete Responsible already exists!"
                    }
                }
            },
            "get": {
                "tags": ["Athlete Responsible"],
                "summary": "List Athletes Responsible",
                "description": "It should be possible to list all registered athlete responsible.",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/athleteResponsible/{cpf}": {
            "get": {
                "tags": ["Athlete Responsible"],
                "summary": "Find Athlete Responsible by CPF",
                "description": "It should be able to find an athlete responsible by CPF",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Athlete Responsible CPF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AthleteResponsible"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Athlete responsible does not exists!"
                    }
                }
            },
            "put": {
                "tags": ["Athlete Responsible"],
                "summary": "Update Athlete Responsible",
                "description": "It should be possible to update a registered athlete responsible.",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Athlete Responsible CPF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "email": "responsavelUPDATED@email.com", 
                                "phoneNumber": "81999991111", 
                                "profession": "Profissão do Responsável UPDATED", 
                                "maritalStatus": "Estado civil do Responsável UPDATED",
                                "addressId": "af3e90d3-6ae2-4a79-b402-bc207861dc00"
                            }        
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AthleteResponsible"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Athlete responsible does not exists!"
                    }
                }
            },
            "delete": {
                "tags": ["Athlete Responsible"],
                "summary": "Delete Athlete Responsible",
                "description": "It should be able to delete an athlete responsible by CPF",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Athlete Responsible CPF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AthleteResponsible"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Athlete responsible does not exists!"
                    }
                }
            }
        }
    },
    "components": {
        
    }
}